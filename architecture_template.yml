jobs:
- job: ${{ parameters.arch }}
  pool:
    vmImage: ubuntu-latest
  variables:
    #import parameters as variables from azure-pipelines.yml
    BUILD_ARCH: ${{ parameters.arch }}
    MOCK_ARCH: ${{ parameters.mock_arch }}
    VM_IMAGE_URN: ${{ parameters.vm_image_urn }}
    VM_SIZE: ${{ parameters.vm_size }}
    RESOURCE_GROUP: ${{ parameters.resource_group }}
    BUILD_GIT: ${{ parameters.build_git }}
    BUILD_BRANCH: ${{ parameters.build_branch }}
    BUILD_SCRIPT: ${{ parameters.build_script }}
    BUILD_DEPS: ${{ parameters.build_deps }}
    TAR_DIR: ${{ parameters.tar_dir }}
    SSH_OPTIONS: 'StrictHostKeyChecking=no'

  steps:
  - task: AzureCLI@1
    inputs:
      azureSubscription: ${{ parameters.azure_sub }}
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo 'az vm image accept-terms --urn '${VM_IMAGE_URN}
        az vm image accept-terms --urn ${VM_IMAGE_URN}
    displayName: 'Accepting Azure VM image terms'

  - task: AzureCLI@1
    inputs:
      azureSubscription: ${{ parameters.azure_sub }}
      scriptLocation: 'inlineScript'
      inlineScript: |
        BUILD_ID=$RANDOM
        echo 'Build ID '$BUILD_ID
        BUILD_NAME='Build-'${BUILD_ARCH}'-'${BUILD_ID}
        echo 'Build Name '${BUILD_NAME}
        echo "##vso[task.setvariable variable=BUILD_NAME]${BUILD_NAME}"
        echo 'Resource Group '${RESOURCE_GROUP}
        echo 'Image '${VM_IMAGE_URN}
        az vm create \
          --resource-group ${RESOURCE_GROUP} \
          --name ${BUILD_NAME} \
          --image ${VM_IMAGE_URN} \
          --size ${VM_SIZE} \
          --admin-username azureuser \
          --generate-ssh-keys
    displayName: 'Spinning up new Azure VM'

  - task: AzureCLI@1
    inputs:
      azureSubscription: ${{ parameters.azure_sub }}
      scriptLocation: 'inlineScript'
      inlineScript: |
        VM_IP_ADDR=$(az vm show -d -g ${RESOURCE_GROUP} -n ${BUILD_NAME} --query publicIps -o tsv)
        echo 'VM IP address '${VM_IP_ADDR}
        echo "##vso[task.setvariable variable=VM_IP_ADDR]${VM_IP_ADDR}"
    displayName: 'Getting IP address of new Azure VM'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo 'ssh to '${VM_IP_ADDR}
        ssh -o $SSH_OPTIONS azureuser@${VM_IP_ADDR} echo 'hello world'
    displayName: 'Logging into Azure VM via ssh'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: ssh -tt -o $SSH_OPTIONS azureuser@${VM_IP_ADDR} ${BUILD_DEPS}
    displayName: 'Installing Dependencies'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: ssh -o $SSH_OPTIONS azureuser@${VM_IP_ADDR} git clone -b ${BUILD_BRANCH} ${BUILD_GIT} .
    displayName: 'Cloning Build GitHub'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: ssh -o $SSH_OPTIONS azureuser@${VM_IP_ADDR} bash ${BUILD_SCRIPT} ${BUILD_ARCH}
    displayName: 'Running Build Script'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: scp -o $SSH_OPTIONS azureuser@${VM_IP_ADDR}:/${TAR_DIR}/install.tar.gz $(Build.ArtifactStagingDirectory)/install_$BUILD_ARCH_rootfs.tar.gz
    displayName: 'Downloading .tar.gz to Artifacts'
    
  - task: AzureCLI@1
    inputs:
      azureSubscription: ${{ parameters.azure_sub }}
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo 'removing '${BUILD_NAME}' from '${RESOURCE_GROUP}
        az vm delete \
          --resource-group ${RESOURCE_GROUP} \
          --name ${BUILD_NAME} \
          --yes
    displayName: 'Shutting down Azure VMs'

- job: Clean_${{ parameters.arch }}
  dependsOn: ${{ parameters.arch }}
  condition: failed()
  pool:
    vmImage: ubuntu-latest
  variables:
    BUILD_ARCH: ${{ parameters.arch }}
    BUILD_NAME: $[ dependencies.$(BUILD_ARCH).outputs['setvarStep.BUILD_NAME'] ]
    RESOURCE_GROUP: ${{ parameters.resource_group }}
  steps:
  - task: AzureCLI@1
    inputs:
      azureSubscription: ${{ parameters.azure_sub }}
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo 'removing '${BUILD_NAME}' from '${RESOURCE_GROUP}
        az vm delete \
          --resource-group ${RESOURCE_GROUP} \
          --name ${BUILD_NAME} \
          --yes
    displayName: 'Shutting down Azure VMs'