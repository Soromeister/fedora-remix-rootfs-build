jobs:
- job: ${{ parameters.arch }}
  pool:
    vmImage: ubuntu-latest
  variables:
    BUILD_ARCH: ${{ parameters.arch }}
    MOCK_ARCH: ${{ parameters.mock_arch }}

  container:
    image: fedora:latest
    options: --cap-add=SYS_ADMIN --privileged

  steps:
  - script: sudo dnf -y install mock qemu-user-static git
    displayName: 'Installing dependencies'

  - script: mkdir dist
    displayName: 'Create dist folder'

  - script: mkdir -m 0755 ./dist/dev
    displayName: 'Make sure /dev is created before later mount'

  - script: sudo groupadd mock
    displayName: 'Create mock group'

  - script: sudo usermod -a -G mock $(whoami)
    displayName: 'Add current user to mock group'
  
  - script: sudo mock --init --dnf --forcearch=$(MOCK_ARCH) --rootdir=$(pwd)/dist
    displayName: 'Use mock to initialise chroot filesystem'

  - script: umount ./dist/dev
    displayName: 'Unmount /dev'

  - script: git clone https://github.com/WhitewaterFoundry/Fedora-Remix-for-WSL
    displayName: 'Cloning Fedora-Remix-for-WSL repo'

  - script: |
      cp ./Fedora-Remix-for-WSL/linux_files/dnf.conf ./dist/etc/dnf/dnf.conf
      cp ./Fedora-Remix-for-WSL/linux_files/wsl.conf ./dist/etc/wsl.conf
      cp ./Fedora-Remix-for-WSL/linux_files/local.conf ./dist/etc/local.conf
      cp ./Fedora-Remix-for-WSL/linux_files/remix.sh ./dist/etc/profile.d/remix.sh
      cp ./Fedora-Remix-for-WSL/linux_files/wslutilities.repo ./dist/etc/yum.repos.d/wslutilties.repo
    displayName: 'Moving Fedora Remix for WSL files into place'

  - script: |
      systemd-nspawn -q -D ./dist /bin/bash << EOF
      dnf -y update
      dnf -y install generic-release --allowerasing
      EOF
    displayName: 'Comply with Fedora Remix terms'

  - script: cp ./Fedora-Remix-for-WSL/linux_files/os-release ./dist/etc/os-release
    displayName: 'Overwrite os-release'

  - script: |
      systemd-nspawn -q -D ./dist /bin/bash << EOF
      dnf -y reinstall crypto-policies --exclude=grub\*,dracut*,grubby,kpartx,kmod,os-prober,libkcapi*
      dnf -y autoremove
      dnf -y clean all
      EOF
    displayName: 'Reinstall crypto-policies and clean up'

  - script: |
      cd ./dist
      tar --exclude='boot/*' --exclude='var/cache/dnf/*' --numeric-owner -czf $(Build.ArtifactStagingDirectory)/install_$(BUILD_ARCH)_rootfs.tar.gz *